{"ast":null,"code":"class RequestUtils {\n  convertParam(data) {\n    let s = '';\n\n    for (const k in data) {\n      if ({}.hasOwnProperty.call(data, k)) {\n        s += `${k}=${data[k]}&`;\n      }\n    }\n\n    if (s === '') {\n      return '';\n    }\n\n    s = s.substring(0, s.length - 1);\n    return `?${s}`;\n  }\n\n}\n\nconst toPromise = asyncObj => {\n  return new Promise((resolve, reject) => {\n    asyncObj.then(r => {\n      return resolve(r.data);\n    }).catch(e => {\n      return reject(e);\n    });\n  });\n};\n\nexport { toPromise };\nexport default new RequestUtils();","map":{"version":3,"sources":["C:/Users/ChenL/Desktop/supaps-bs/src/api/requestUtils.js"],"names":["RequestUtils","convertParam","data","s","k","hasOwnProperty","call","substring","length","toPromise","asyncObj","Promise","resolve","reject","then","r","catch","e"],"mappings":"AAAA,MAAMA,YAAN,CAAmB;AACjBC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjB,QAAIC,CAAC,GAAG,EAAR;;AACA,SAAK,MAAMC,CAAX,IAAgBF,IAAhB,EAAsB;AACpB,UAAI,GAAGG,cAAH,CAAkBC,IAAlB,CAAuBJ,IAAvB,EAA6BE,CAA7B,CAAJ,EAAqC;AACnCD,QAAAA,CAAC,IAAK,GAAEC,CAAE,IAAGF,IAAI,CAACE,CAAD,CAAI,GAArB;AACD;AACF;;AACD,QAAID,CAAC,KAAK,EAAV,EAAc;AACZ,aAAO,EAAP;AACD;;AACDA,IAAAA,CAAC,GAAGA,CAAC,CAACI,SAAF,CAAY,CAAZ,EAAeJ,CAAC,CAACK,MAAF,GAAW,CAA1B,CAAJ;AACA,WAAQ,IAAGL,CAAE,EAAb;AACD;;AAbgB;;AAenB,MAAMM,SAAS,GAAIC,QAAD,IAAc;AAC9B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCH,IAAAA,QAAQ,CAACI,IAAT,CAAeC,CAAD,IAAO;AACnB,aAAOH,OAAO,CAACG,CAAC,CAACb,IAAH,CAAd;AACD,KAFD,EAEGc,KAFH,CAEUC,CAAD,IAAO;AACd,aAAOJ,MAAM,CAACI,CAAD,CAAb;AACD,KAJD;AAKD,GANM,CAAP;AAOD,CARD;;AASA,SAAQR,SAAR;AAEA,eAAe,IAAIT,YAAJ,EAAf","sourcesContent":["class RequestUtils {\r\n  convertParam(data) {\r\n    let s = '';\r\n    for (const k in data) {\r\n      if ({}.hasOwnProperty.call(data, k)) {\r\n        s += `${k}=${data[k]}&`;\r\n      }\r\n    }\r\n    if (s === '') {\r\n      return '';\r\n    }\r\n    s = s.substring(0, s.length - 1);\r\n    return `?${s}`;\r\n  }\r\n}\r\nconst toPromise = (asyncObj) => {\r\n  return new Promise((resolve, reject) => {\r\n    asyncObj.then((r) => {\r\n      return resolve(r.data);\r\n    }).catch((e) => {\r\n      return reject(e);\r\n    });\r\n  });\r\n};\r\nexport {toPromise};\r\n\r\nexport default new RequestUtils();\r\n"]},"metadata":{},"sourceType":"module"}