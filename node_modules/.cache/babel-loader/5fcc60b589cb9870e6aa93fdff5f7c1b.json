{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChenL\\\\Desktop\\\\supaps-bs\\\\src\\\\components\\\\Models\\\\TestModel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport * as THREE from 'three';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport './TestModel.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThreeBim() {\n  _s();\n\n  useEffect(() => {\n    let container;\n    let camera, scene, renderer;\n    let group; // 模型组的外接盒\n\n    let envelopeBox = new THREE.Box3(); //模型路径\n\n    let mat1 = '/testobj/lancuiting.mtl';\n    let obj1 = '/testobj/lancuiting.obj';\n    let model1 = null; // 模型是否自传\n\n    let rotation = true;\n    init();\n    animate();\n\n    function init() {\n      container = document.getElementById('canvas-frame');\n      camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 10, 10000000);\n      camera.position.z = 800;\n      camera.position.y = 200;\n      scene = new THREE.Scene();\n      group = new THREE.Group();\n      scene.add(group); //scene.add(new THREE.AmbientLight(0xFFFFFF, 1.5));\n\n      let dLight = new THREE.DirectionalLight(0xffffff, 2);\n      dLight.position.set(500, 1000, 4000);\n      dLight.castShadow = true;\n      scene.add(dLight);\n      new MTLLoader().load(mat1, function (mat) {\n        mat.preload();\n        new OBJLoader().setMaterials(mat).load(obj1, function (loadedMesh) {\n          model1 = loadedMesh;\n          let k;\n\n          for (k in model1.children) {\n            model1.children[k].castShadow = true;\n            model1.children[k].receiveShadow = true;\n          }\n\n          model1.traverse(function (value) {\n            if (value.isMesh) {\n              value.castShadow = true;\n              value.receiveShadow = true;\n            }\n          });\n          model1.scale.set(1.4, 1.4, 1.4);\n          console.log(loadedMesh);\n          group.add(model1);\n          envelopeBox.expandByObject(group);\n        });\n      });\n      renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true,\n        preserveDrawingBuffer: true,\n        autoClear: true\n      }); // renderer.setSize(window.innerWidth, window.innerHeight)\n\n      container.appendChild(renderer.domElement);\n      window.addEventListener('resize', onWindowResize, false);\n      let orbitControls = new OrbitControls(camera, renderer.domElement);\n      orbitControls.autoRotate = false;\n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n    }\n\n    function render() {\n      if (rotation) {\n        group.rotation.y += 0.01;\n      }\n\n      renderer.shadowMap.enabled = true;\n      renderer.render(scene, camera);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"canvas-frame\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ThreeBim, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ThreeBim;\nexport default ThreeBim;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThreeBim\");","map":{"version":3,"sources":["C:/Users/ChenL/Desktop/supaps-bs/src/components/Models/TestModel.jsx"],"names":["React","useEffect","THREE","MTLLoader","OBJLoader","OrbitControls","ThreeBim","container","camera","scene","renderer","group","envelopeBox","Box3","mat1","obj1","model1","rotation","init","animate","document","getElementById","PerspectiveCamera","window","innerWidth","innerHeight","position","z","y","Scene","Group","add","dLight","DirectionalLight","set","castShadow","load","mat","preload","setMaterials","loadedMesh","k","children","receiveShadow","traverse","value","isMesh","scale","console","log","expandByObject","WebGLRenderer","antialias","alpha","preserveDrawingBuffer","autoClear","appendChild","domElement","addEventListener","onWindowResize","orbitControls","autoRotate","aspect","updateProjectionMatrix","setSize","requestAnimationFrame","render","shadowMap","enabled"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport * as THREE from 'three'\r\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport './TestModel.scss';\r\n\r\nfunction ThreeBim () {\r\n  useEffect(() => {\r\n    let container\r\n    let camera, scene, renderer\r\n    let group\r\n\r\n    // 模型组的外接盒\r\n    let envelopeBox = new THREE.Box3()\r\n\r\n    //模型路径\r\n    let mat1 = '/testobj/lancuiting.mtl'\r\n    let obj1 = '/testobj/lancuiting.obj'\r\n\r\n    let model1 = null\r\n\r\n    // 模型是否自传\r\n    let rotation = true\r\n\r\n    init()\r\n    animate()\r\n\r\n    function init () {\r\n      container = document.getElementById('canvas-frame')\r\n\r\n      camera = new THREE.PerspectiveCamera(\r\n        45,\r\n        window.innerWidth / window.innerHeight,\r\n        10,\r\n        10000000\r\n      )\r\n      camera.position.z = 800\r\n      camera.position.y = 200\r\n\r\n      scene = new THREE.Scene()\r\n\r\n      group = new THREE.Group()\r\n      scene.add(group)\r\n\r\n      //scene.add(new THREE.AmbientLight(0xFFFFFF, 1.5));\r\n\r\n      let dLight = new THREE.DirectionalLight(0xffffff, 2)\r\n      dLight.position.set(500, 1000, 4000)\r\n      dLight.castShadow = true\r\n      scene.add(dLight)\r\n\r\n      new MTLLoader().load(mat1, function (mat) {\r\n        mat.preload()\r\n        new OBJLoader().setMaterials(mat).load(obj1, function (loadedMesh) {\r\n          model1 = loadedMesh\r\n          let k\r\n          for (k in model1.children) {\r\n            model1.children[k].castShadow = true\r\n            model1.children[k].receiveShadow = true\r\n          }\r\n          model1.traverse(function (value) {\r\n            if (value.isMesh) {\r\n              value.castShadow = true\r\n              value.receiveShadow = true\r\n            }\r\n          })\r\n          model1.scale.set(1.4, 1.4, 1.4)\r\n          console.log(loadedMesh)\r\n          group.add(model1)\r\n          envelopeBox.expandByObject(group)\r\n        })\r\n      })\r\n\r\n      renderer = new THREE.WebGLRenderer({\r\n        antialias: true,\r\n        alpha: true,\r\n        preserveDrawingBuffer: true,\r\n        autoClear: true\r\n      })\r\n      // renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n      container.appendChild(renderer.domElement)\r\n\r\n      window.addEventListener('resize', onWindowResize, false)\r\n\r\n      let orbitControls = new OrbitControls(camera, renderer.domElement)\r\n      orbitControls.autoRotate = false\r\n    }\r\n\r\n    function onWindowResize () {\r\n      camera.aspect = window.innerWidth / window.innerHeight\r\n      camera.updateProjectionMatrix()\r\n\r\n      renderer.setSize(window.innerWidth, window.innerHeight)\r\n    }\r\n\r\n    function animate () {\r\n      requestAnimationFrame(animate)\r\n\r\n      render()\r\n    }\r\n\r\n    function render () {\r\n      if (rotation) {\r\n        group.rotation.y += 0.01\r\n      }\r\n      renderer.shadowMap.enabled = true\r\n      renderer.render(scene, camera)\r\n    }\r\n  }, [])\r\n  return <div id='canvas-frame'></div>\r\n}\r\n\r\nexport default ThreeBim\r\n"]},"metadata":{},"sourceType":"module"}