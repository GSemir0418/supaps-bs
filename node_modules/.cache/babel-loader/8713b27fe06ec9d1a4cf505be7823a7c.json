{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChenL\\\\Desktop\\\\supaps-bs\\\\src\\\\components\\\\Benefit\\\\LineChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport * as echarts from 'echarts';\nimport { px } from '../../shared/px';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LineChart() {\n  _s();\n\n  const testData = [{\n    time: '1',\n    value: 0.1\n  }, {\n    time: '2',\n    value: 0.22\n  }, {\n    time: '3',\n    value: 0.23\n  }, {\n    time: '4',\n    value: 0.28\n  }, {\n    time: '5',\n    value: 0.32\n  }, {\n    time: '6',\n    value: 0.34\n  }, {\n    time: '7',\n    value: 0.34\n  }, {\n    time: '8',\n    value: 0.39\n  }, {\n    time: '9',\n    value: 0.89\n  }, {\n    time: '10',\n    value: 0.4\n  }, {\n    time: '11',\n    value: 0.89\n  }, {\n    time: '12',\n    value: 0.38\n  }];\n  const divRef = useRef(null);\n  const myChart = useRef(null);\n\n  const renderMyChart = data => {\n    var options = {\n      textStyle: {\n        fontSize: px(12),\n        color: '#79839E'\n      },\n      grid: {\n        x: px(45),\n        y: px(40),\n        x2: px(20),\n        y2: px(40)\n      },\n      xAxis: {\n        type: 'category',\n        boundaryGap: false,\n        data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n        splitLine: {\n          show: true,\n          lineStyle: {\n            color: '#073E78'\n          }\n        },\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: false\n        }\n      },\n      yAxis: {\n        type: 'value',\n        splitLine: {\n          lineStyle: {\n            color: '#073E78'\n          }\n        },\n        axisLabel: {\n          formatter(val) {\n            return val * 100 + '%';\n          }\n\n        }\n      },\n      series: [{\n        type: 'line',\n        data: [0.15, 0.13, 0.11, 0.13, 0.14, 0.15, 0.16, 0.18, 0.21, 0.19, 0.17, 0.16],\n        symbol: 'circle',\n        symbolSize: px(12),\n        lineStyle: {\n          width: px(2)\n        },\n        areaStyle: {\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: '#ebdba4'\n          }, {\n            offset: 1,\n            color: '#e69d87'\n          }])\n        }\n      }]\n    };\n    myChart.current.setOption(options);\n  };\n\n  useEffect(() => {}, []); //初始化数据\n\n  useEffect(() => {\n    myChart.current = echarts.init(divRef.current);\n    renderMyChart(testData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bordered benefit\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u6548\\u76CA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: divRef,\n      className: \"chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineChart, \"RNxlMRn2CCBo0do41gnpH0hWAk8=\");\n\n_c = LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/Users/ChenL/Desktop/supaps-bs/src/components/Benefit/LineChart.jsx"],"names":["React","useRef","useEffect","echarts","px","LineChart","testData","time","value","divRef","myChart","renderMyChart","data","options","textStyle","fontSize","color","grid","x","y","x2","y2","xAxis","type","boundaryGap","splitLine","show","lineStyle","axisTick","axisLine","yAxis","axisLabel","formatter","val","series","symbol","symbolSize","width","areaStyle","graphic","LinearGradient","offset","current","setOption","init"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport * as echarts from 'echarts'\r\nimport { px } from '../../shared/px'\r\nimport './index.scss'\r\n\r\nexport default function LineChart () {\r\n  const testData = [\r\n    { time: '1', value: 0.1},\r\n    { time: '2', value: 0.22 },\r\n    { time: '3', value: 0.23 },\r\n    { time: '4', value: 0.28 },\r\n    { time: '5', value: 0.32 },\r\n    { time: '6', value: 0.34 },\r\n    { time: '7', value: 0.34 },\r\n    { time: '8', value: 0.39 },\r\n    { time: '9', value: 0.89 },\r\n    { time: '10', value:0.4 },\r\n    { time: '11', value:0.89 },\r\n    { time: '12', value:0.38 }\r\n  ]\r\n  const divRef = useRef(null)\r\n  const myChart = useRef(null)\r\n\r\n  const renderMyChart = (data)=>{\r\n    var options = {\r\n      textStyle: {\r\n        fontSize: px(12),\r\n        color: '#79839E'\r\n      },\r\n      grid: {\r\n        x: px(45),\r\n        y: px(40),\r\n        x2: px(20),\r\n        y2: px(40)\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\r\n        splitLine: { show: true, lineStyle: { color: '#073E78' } },\r\n        axisTick: { show: false },\r\n        axisLine: { show: false }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        splitLine: { lineStyle: { color: '#073E78' } },\r\n        axisLabel: {\r\n          formatter (val) {\r\n            return val * 100 + '%'\r\n          }\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          type: 'line',\r\n          data: [\r\n            0.15,\r\n            0.13,\r\n            0.11,\r\n            0.13,\r\n            0.14,\r\n            0.15,\r\n            0.16,\r\n            0.18,\r\n            0.21,\r\n            0.19,\r\n            0.17,\r\n            0.16,\r\n          ],\r\n          symbol: 'circle',\r\n          symbolSize: px(12),\r\n          lineStyle: { width: px(2) },\r\n          areaStyle: {\r\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              {\r\n                offset: 0,\r\n                color: '#ebdba4'\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: '#e69d87'\r\n              }\r\n            ])\r\n          }\r\n        }\r\n      ]\r\n    }\r\n    myChart.current.setOption(options)\r\n  }\r\n  \r\n  useEffect(()=>{\r\n\r\n  },[])\r\n  //初始化数据\r\n  useEffect(() => {\r\n    myChart.current = echarts.init(divRef.current)\r\n    renderMyChart(testData)\r\n  }, [])\r\n  return (\r\n    <div className='bordered benefit'>\r\n      <h2>效益</h2>\r\n      <div ref={divRef} className='chart'></div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}