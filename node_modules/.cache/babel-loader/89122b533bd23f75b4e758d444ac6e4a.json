{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChenL\\\\Desktop\\\\supaps-bs\\\\src\\\\components\\\\Diagram\\\\LineChart1.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport './linechart.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LineChart1() {\n  _s();\n\n  const divRef = useRef(null);\n  const myChart = useRef(null); // const testColors = {\n  //   甲: 'red',\n  //   乙: 'green',\n  //   丙: 'blue',\n  //   丁: 'pink',\n  //   戊: '#FFFFFF',\n  //   己: 'red'\n  // }\n\n  useEffect(() => {\n    setInterval(() => {\n      const newData = [{\n        name: '甲',\n        value: Math.random() * 10,\n        color: 'red'\n      }, {\n        name: '乙',\n        value: Math.random() * 10,\n        color: 'green'\n      }, {\n        name: '丙',\n        value: Math.random() * 10,\n        color: 'blue'\n      }, {\n        name: '丁',\n        value: Math.random() * 10,\n        color: 'pink'\n      }, {\n        name: '戊',\n        value: Math.random() * 10,\n        color: '#FFFFFF'\n      }, {\n        name: '己',\n        value: Math.random() * 10,\n        color: '#FFFFFF'\n      }];\n      renderMyChart(newData);\n    }, 1000);\n  }, []);\n\n  const renderMyChart = data => {\n    var option = {\n      title: {\n        text: '关键产品收率计划与实际对比'\n      },\n      visualMap: [{\n        show: false,\n        type: 'continuous',\n        seriesIndex: 0,\n        min: 0,\n        max: 600\n      }],\n      tooltip: {\n        trigger: 'axis'\n      },\n      legend: {\n        data: ['计划收率', '实际收率']\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'category',\n        boundaryGap: false,\n        data: ['2020-6', '2020-7', '2020-8', '2020-9', '2020-10', '2020-11', '2020-12', '2021-1', '2021-2', '2021-3', '2021-4', '2021-5', '2021-6', '2021-7', '2021-8', '2021-9', '2021-10', '2021-11', '2021-12', '2022-1', '2022-2']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: '计划收率',\n        showSymbol: false,\n        type: 'line',\n        data: [170, 182, 148, 160, 290, 200, 310, 340, 305, 190, 270, 150, 138, 282, 191, 300, 290, 280, 250, 292, 250]\n      }, {\n        name: '实际收率',\n        showSymbol: false,\n        type: 'line',\n        data: [150, 170, 140, 154, 240, 180, 290, 280, 270, 240, 280, 250, 300, '', '', '', '', '', '', '', '', '']\n      }]\n    };\n    myChart.current.setOption(options);\n  }; //初始化图表\n\n\n  useEffect(() => {\n    myChart.current = echarts.init(divRef.current); //对myChart的ref的初始化\n\n    renderMyChart([]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contrastline\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linechart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linechart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineChart1, \"RNxlMRn2CCBo0do41gnpH0hWAk8=\");\n\n_c = LineChart1;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart1\");","map":{"version":3,"sources":["C:/Users/ChenL/Desktop/supaps-bs/src/components/Diagram/LineChart1.jsx"],"names":["React","useEffect","useRef","LineChart1","divRef","myChart","setInterval","newData","name","value","Math","random","color","renderMyChart","data","option","title","text","visualMap","show","type","seriesIndex","min","max","tooltip","trigger","legend","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","series","showSymbol","current","setOption","options","echarts","init"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport './linechart.scss'\r\n\r\nexport default function LineChart1 () {\r\n  const divRef = useRef(null)\r\n  const myChart = useRef(null)\r\n  // const testColors = {\r\n  //   甲: 'red',\r\n  //   乙: 'green',\r\n  //   丙: 'blue',\r\n  //   丁: 'pink',\r\n  //   戊: '#FFFFFF',\r\n  //   己: 'red'\r\n  // }\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      const newData = [\r\n        { name: '甲', value: Math.random() * 10, color: 'red' },\r\n        { name: '乙', value: Math.random() * 10, color: 'green' },\r\n        { name: '丙', value: Math.random() * 10, color: 'blue' },\r\n        { name: '丁', value: Math.random() * 10, color: 'pink' },\r\n        { name: '戊', value: Math.random() * 10, color: '#FFFFFF' },\r\n        { name: '己', value: Math.random() * 10, color: '#FFFFFF' }\r\n      ]\r\n      renderMyChart(newData)\r\n    }, 1000)\r\n  }, [])\r\n\r\n  const renderMyChart = data => {\r\n    var option = {\r\n      title: {\r\n          text: '关键产品收率计划与实际对比'\r\n      },\r\n      visualMap: [{\r\n          show: false,\r\n          type: 'continuous',\r\n          seriesIndex: 0,\r\n          min: 0,\r\n          max: 600\r\n      }],\r\n      tooltip: {\r\n          trigger: 'axis'\r\n      },\r\n      legend: {\r\n          data: ['计划收率', '实际收率']\r\n      },\r\n      grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n      },\r\n      \r\n      xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          \r\n          data: ['2020-6', '2020-7', '2020-8', '2020-9', '2020-10', '2020-11', '2020-12','2021-1','2021-2','2021-3','2021-4','2021-5','2021-6','2021-7','2021-8','2021-9','2021-10','2021-11','2021-12','2022-1','2022-2']\r\n      },\r\n      yAxis: {\r\n          type: 'value',\r\n          \r\n      },\r\n      series: [\r\n          {\r\n              name: '计划收率',\r\n              showSymbol: false,\r\n              type: 'line',\r\n              \r\n              data: [170, 182, 148, 160, 290, 200, 310,340,305,190,270,150,138,282,191,300,290,280,250,292,250]\r\n          },\r\n          {\r\n              name: '实际收率',\r\n              showSymbol: false,\r\n              type: 'line',\r\n              \r\n              data: [150, 170, 140, 154, 240, 180, 290,280,270,240,280,250,300,'','','','','','','','','',]\r\n          },\r\n         \r\n          \r\n      ]\r\n  };\r\n    myChart.current.setOption(options)\r\n  }\r\n\r\n  //初始化图表\r\n  useEffect(() => {\r\n    myChart.current = echarts.init(divRef.current) //对myChart的ref的初始化\r\n    renderMyChart([])\r\n  }, [])\r\n  return (\r\n    <div className='contrastline'>\r\n      <div className=\"linechart\"></div>\r\n      <div className=\"linechart\"></div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}