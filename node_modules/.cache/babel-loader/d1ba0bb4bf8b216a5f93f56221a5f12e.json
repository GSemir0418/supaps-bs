{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChenL\\\\Desktop\\\\supaps-bs\\\\src\\\\components\\\\ProductInventoryChart\\\\BarChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport * as echarts from 'echarts';\nimport { px } from '../../shared/px';\nimport { BaseEchartsOptions } from '../../shared/base-echarts-options';\nimport './index.scss'; //'#3fb1e3''#6be6c1''#626c91''#a0a7e6''#c4ebad''#96dee8'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductInventoryChart() {\n  _s();\n\n  const divRef = useRef(null);\n  const myChart = useRef(null);\n  useEffect(() => {\n    setInterval(() => {\n      const newData = [{\n        name: '甲',\n        value: Math.random() * 10\n      }, {\n        name: '乙',\n        value: Math.random() * 10\n      }, {\n        name: '丙',\n        value: Math.random() * 10\n      }, {\n        name: '丁',\n        value: Math.random() * 10\n      }, {\n        name: '戊',\n        value: Math.random() * 10\n      }, {\n        name: '己',\n        value: Math.random() * 10\n      }];\n      renderMyChart(newData);\n    }, 1000);\n  }, []);\n\n  const renderMyChart = data => {\n    var options = { ...BaseEchartsOptions,\n      grid: {\n        x: px(45),\n        y: px(40),\n        x2: px(20),\n        y2: px(40)\n      },\n      xAxis: {\n        data: data.map(i => i.name),\n        axisLabel: {\n          fontSize: px(18),\n\n          formatter(val) {\n            if (val.length > 2) {\n              const array = val.split('');\n              array.splice(2, 0, '\\n');\n              return array.join('');\n            } else {\n              return val;\n            }\n          }\n\n        }\n      },\n      yAxis: {\n        splitLine: {\n          show: false\n        },\n        axisLabel: {\n          fontSize: px(18)\n        }\n      },\n      color: ['#ffb248'],\n      series: [{\n        type: 'bar',\n        data: data.map(i => i.value),\n        showBackground: true,\n        backgroundStyle: {\n          color: '#a0a7e6'\n        }\n      }]\n    };\n    myChart.current.setOption(options);\n  }; //初始化图标\n\n\n  useEffect(() => {\n    myChart.current = echarts.init(divRef.current); //对myChart的ref的初始化\n\n    renderMyChart([]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bordered product-inventory-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u4EA7\\u54C1\\u5E93\\u5B58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: divRef,\n      className: \"chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductInventoryChart, \"RNxlMRn2CCBo0do41gnpH0hWAk8=\");\n\n_c = ProductInventoryChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductInventoryChart\");","map":{"version":3,"sources":["C:/Users/ChenL/Desktop/supaps-bs/src/components/ProductInventoryChart/BarChart.jsx"],"names":["React","useRef","useEffect","echarts","px","BaseEchartsOptions","ProductInventoryChart","divRef","myChart","setInterval","newData","name","value","Math","random","renderMyChart","data","options","grid","x","y","x2","y2","xAxis","map","i","axisLabel","fontSize","formatter","val","length","array","split","splice","join","yAxis","splitLine","show","color","series","type","showBackground","backgroundStyle","current","setOption","init"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport * as echarts from 'echarts'\r\nimport { px } from '../../shared/px'\r\nimport { BaseEchartsOptions } from '../../shared/base-echarts-options'\r\nimport './index.scss'\r\n//'#3fb1e3''#6be6c1''#626c91''#a0a7e6''#c4ebad''#96dee8'\r\nexport default function ProductInventoryChart () {\r\n  const divRef = useRef(null)\r\n  const myChart = useRef(null)\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      const newData = [\r\n        { name: '甲', value: Math.random() * 10 },\r\n        { name: '乙', value: Math.random() * 10 },\r\n        { name: '丙', value: Math.random() * 10 },\r\n        { name: '丁', value: Math.random() * 10 },\r\n        { name: '戊', value: Math.random() * 10 },\r\n        { name: '己', value: Math.random() * 10 }\r\n      ]\r\n      renderMyChart(newData)\r\n    }, 1000)\r\n  }, [])\r\n\r\n  const renderMyChart = data => {\r\n    var options = {\r\n      ...BaseEchartsOptions,\r\n      grid: {\r\n        x: px(45),\r\n        y: px(40),\r\n        x2: px(20),\r\n        y2: px(40)\r\n      },\r\n      xAxis: {\r\n        data: data.map(i => i.name),\r\n        axisLabel: {\r\n          fontSize: px(18),\r\n          formatter (val) {\r\n            if (val.length > 2) {\r\n              const array = val.split('')\r\n              array.splice(2, 0, '\\n')\r\n              return array.join('')\r\n            } else {\r\n              return val\r\n            }\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        splitLine: { show: false },\r\n        axisLabel: {\r\n          fontSize: px(18)\r\n        }\r\n      },\r\n      color: ['#ffb248'],\r\n      series: [\r\n        {\r\n          type: 'bar',\r\n          data: data.map(i => i.value),\r\n          showBackground: true,\r\n          backgroundStyle: {\r\n            color: '#a0a7e6'\r\n          }\r\n        }\r\n      ]\r\n    }\r\n    myChart.current.setOption(options)\r\n  }\r\n\r\n  //初始化图标\r\n  useEffect(() => {\r\n    myChart.current = echarts.init(divRef.current) //对myChart的ref的初始化\r\n    renderMyChart([])\r\n  }, [])\r\n  return (\r\n    <div className='bordered product-inventory-chart'>\r\n      <h2>产品库存</h2>\r\n      <div ref={divRef} className='chart'></div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}