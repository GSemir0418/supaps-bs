{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ChenL\\\\Desktop\\\\supaps-bs\\\\src\\\\components\\\\ProductInventoryChart\\\\BarChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport * as echarts from 'echarts';\nimport { px } from '../../shared/px';\nimport { BaseEchartsOptions } from '../../shared/base-echarts-options';\nimport bar from '../../assets/img/bar.png';\nimport './index.scss'; //'#3fb1e3''#6be6c1''#626c91''#a0a7e6''#c4ebad''#96dee8'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductInventoryChart() {\n  _s();\n\n  const divRef = useRef(null);\n  const myChart = useRef(null);\n  useEffect(() => {\n    setInterval(() => {\n      const newData = [{\n        name: '甲',\n        value: Math.random() * 10,\n        color: 'red'\n      }, {\n        name: '乙',\n        value: Math.random() * 10,\n        color: 'green'\n      }, {\n        name: '丙',\n        value: Math.random() * 10,\n        color: 'blue'\n      }, {\n        name: '丁',\n        value: Math.random() * 10,\n        color: 'pink'\n      }, {\n        name: '戊',\n        value: Math.random() * 10,\n        color: '#FFFFFF'\n      }, {\n        name: '己',\n        value: Math.random() * 10,\n        color: '#FFFFFF'\n      }];\n      renderMyChart(newData);\n    }, 1000);\n  }, []);\n\n  const renderMyChart = data => {\n    var options = { ...BaseEchartsOptions,\n      grid: {\n        x: px(45),\n        y: px(40),\n        x2: px(20),\n        y2: px(40)\n      },\n      xAxis: {\n        data: data.map(i => i.name),\n        axisLabel: {\n          fontSize: px(18),\n\n          formatter(val) {\n            if (val.length > 2) {\n              const array = val.split('');\n              array.splice(2, 0, '\\n');\n              return array.join('');\n            } else {\n              return val;\n            }\n          }\n\n        }\n      },\n      yAxis: {\n        splitLine: {\n          show: false\n        },\n        axisLabel: {\n          fontSize: px(18)\n        }\n      },\n      // color: ['#562ccad2'],\n      // color:data.map(i=>i.color),\n      series: [{\n        type: 'bar',\n        data: data.map(i => i.value),\n        showBackground: true,\n        itemStyle: {\n          color: data.map(i => [i.color](1))\n        },\n        backgroundStyle: {\n          color: '#0a529920' // color: data.map(i => i.color)\n\n        }\n      }]\n    };\n    myChart.current.setOption(options);\n  }; //初始化图标\n\n\n  useEffect(() => {\n    myChart.current = echarts.init(divRef.current); //对myChart的ref的初始化\n\n    renderMyChart([]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bordered product-inventory-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: bar,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), \" \\u4EA7\\u54C1\\u5E93\\u5B58\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: divRef,\n      className: \"chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductInventoryChart, \"RNxlMRn2CCBo0do41gnpH0hWAk8=\");\n\n_c = ProductInventoryChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductInventoryChart\");","map":{"version":3,"sources":["C:/Users/ChenL/Desktop/supaps-bs/src/components/ProductInventoryChart/BarChart.jsx"],"names":["React","useRef","useEffect","echarts","px","BaseEchartsOptions","bar","ProductInventoryChart","divRef","myChart","setInterval","newData","name","value","Math","random","color","renderMyChart","data","options","grid","x","y","x2","y2","xAxis","map","i","axisLabel","fontSize","formatter","val","length","array","split","splice","join","yAxis","splitLine","show","series","type","showBackground","itemStyle","backgroundStyle","current","setOption","init"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport * as echarts from 'echarts'\r\nimport { px } from '../../shared/px'\r\nimport { BaseEchartsOptions } from '../../shared/base-echarts-options'\r\nimport bar from '../../assets/img/bar.png'\r\nimport './index.scss'\r\n//'#3fb1e3''#6be6c1''#626c91''#a0a7e6''#c4ebad''#96dee8'\r\nexport default function ProductInventoryChart () {\r\n  const divRef = useRef(null)\r\n  const myChart = useRef(null)\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      const newData = [\r\n        { name: '甲', value: Math.random() * 10, color: 'red' },\r\n        { name: '乙', value: Math.random() * 10, color: 'green' },\r\n        { name: '丙', value: Math.random() * 10, color: 'blue' },\r\n        { name: '丁', value: Math.random() * 10, color: 'pink' },\r\n        { name: '戊', value: Math.random() * 10, color: '#FFFFFF' },\r\n        { name: '己', value: Math.random() * 10, color: '#FFFFFF' }\r\n      ]\r\n      renderMyChart(newData)\r\n    }, 1000)\r\n  }, [])\r\n\r\n  const renderMyChart = data => {\r\n    var options = {\r\n      ...BaseEchartsOptions,\r\n      grid: {\r\n        x: px(45),\r\n        y: px(40),\r\n        x2: px(20),\r\n        y2: px(40)\r\n      },\r\n      xAxis: {\r\n        data: data.map(i => i.name),\r\n        axisLabel: {\r\n          fontSize: px(18),\r\n          formatter (val) {\r\n            if (val.length > 2) {\r\n              const array = val.split('')\r\n              array.splice(2, 0, '\\n')\r\n              return array.join('')\r\n            } else {\r\n              return val\r\n            }\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        splitLine: { show: false },\r\n        axisLabel: {\r\n          fontSize: px(18)\r\n        }\r\n      },\r\n      // color: ['#562ccad2'],\r\n      // color:data.map(i=>i.color),\r\n      series: [\r\n        {\r\n          type: 'bar',\r\n          data: data.map(i => i.value),\r\n          showBackground: true,\r\n          itemStyle: {\r\n            color: data.map(i => [i.color](1))\r\n          },\r\n          backgroundStyle: {\r\n            color: '#0a529920'\r\n            // color: data.map(i => i.color)\r\n          }\r\n        }\r\n      ]\r\n    }\r\n    myChart.current.setOption(options)\r\n  }\r\n\r\n  //初始化图标\r\n  useEffect(() => {\r\n    myChart.current = echarts.init(divRef.current) //对myChart的ref的初始化\r\n    renderMyChart([])\r\n  }, [])\r\n  return (\r\n    <div className='bordered product-inventory-chart'>\r\n      <h2>\r\n        <img src={bar} alt='' /> 产品库存\r\n      </h2>\r\n      <div ref={divRef} className='chart'></div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}